[{"header":"Основные (Fundamental)","links":[{"title":"Контейнер свойств (property container)","data":{"path":"App/Http/Controllers/FundamentalPatterns@PropertyContainer","description":"обычно нужен для того, что бы расширить свойства класса путём динамического добавления\r\n\r\nчто бы не надо было лезть в класс и постоянно писать какие то дополнительные переменные\r\n\r\n<a href=\"https://ru.wikipedia.org/wiki/%D0%9A%D0%BE%D0%BD%D1%82%D0%B5%D0%B9%D0%BD%D0%B5%D1%80_%D1%81%D0%B2%D0%BE%D0%B9%D1%81%D1%82%D0%B2_(%D1%88%D0%B0%D0%B1%D0%BB%D0%BE%D0%BD_%D0%BF%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F)\" target=\"_blank\">Ссыль</a>\r\n","code":"//интерфейс нужен для того что бы обозначить правила классов, которые наследуются от него, какие методы необходимо реализовать \r\ninterface PropertyInterface {\r\n\tfunction AddProperty($propertyName, $value); //создать свойство с данными\r\n\tfunction DeleteProperty($propertyName); //удалить свойство \r\n\tfunction GetProperty($propertyName); //получить данные из свойства \r\n\tfunction SetProperty($propertyName, $value); //обновить данные в свойстве \r\n\t\r\n}\r\n\r\n//класс контейнер наследуется от интерфейса для реализации логики по правилам интерфейса\r\nclass PropertyContainer extends PropertyInterface {\r\n\tprivate $propertyContainer = [];\r\n\t\r\n\tpublic function AddProperty($propertyName, $value) {\r\n\t\t$this->propertyContainer[$propertyName] = $value;\r\n\t}\r\n\t\r\n\tpublic function DeleteProperty($propertyName) {\r\n\t\tunset(propertyContainer[$propertyName]);\r\n\t}\r\n\t\r\n\tpublic function GetProperty($propertyName) {\r\n\t\treturn $this->propertyContainer[$propertyName] ?? null;\r\n\t}\r\n\t\r\n\tpublic function SetProperty($propertyName, $value) {\r\n\t\tif(!isset($this->propertyContainer[$propertyName])) {\r\n\t\t\tthrow new Exception(\"Property [{$propertyName}] is not found\");\r\n\t\t}\r\n\t\t$this->propertyContainer[$propertyName] = $value;\r\n\t}\r\n}\r\n\r\n\r\n//допустим есть класс \r\n//в классе всегда лучше оставлять линк на то, какой ты шаблон проектирования использовал\r\nclass BlogPost extends PropertyContainer {\r\n\t//used pattern https://ru.wikipedia.org/wiki/%D0%9A%D0%BE%D0%BD%D1%82%D0%B5%D0%B9%D0%BD%D0%B5%D1%80_%D1%81%D0%B2%D0%BE%D0%B9%D1%81%D1%82%D0%B2_(%D1%88%D0%B0%D0%B1%D0%BB%D0%BE%D0%BD_%D0%BF%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F)\r\n\t//some...\r\n\t//functions bla bla \r\n}\r\n\r\n//применение:\r\n$blog = new BlogPost();\r\n$blog->AddProperty('name', 'Ras');\r\n$name = $blog->GetProperty('name');\r\n$blog->SetProperty('name', 'saR');\r\n$blog->DeleteProperty('name');"}}]}]